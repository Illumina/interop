# Configuration for AppVeyor Continuous Integration Service
#
# Build status: https://ci.appveyor.com/project/ezralanglois/interop
#
# Tested configurations:
#
#   Visual Studio 14 2015
#     - Release/Debug
#     - 64-bit
#   MinGW
#     - Release/Debug
#     - 64-bit
#
# Removed support for
#   - 32-bit compilers
#   - Visual Studio 12 2013
#
# C# Compiler is always .NET v4.0.30319
#
# TODO: Why does enabling CRT fail on appveyor?
#
# TODO: Add code to download miniconda if it does not exist

cache:
  - x86_64-4.9.2-release-win32-seh-rt_v4-rev4.7z
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml

image:
- Visual Studio 2015
environment:
  matrix:
    - generator: "MinGW Makefiles"
      COMPILER_PATH: C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
      BUILD: mingw_win64
      config_type: win64
      ADDIONAL_CONFIG_OPTIONS: -DENABLE_PYTHON=OFF
      PACKAGE_TARGET: bundle
      PYTHON_PATH_DIR: C:\Miniconda-x64
      PYTHON_VERSION: 2.7
      configuration: Release
    - generator: "Visual Studio 14 2015 Win64"
      BUILD: msvc14_win64_py27
      config_type: win64
      PACKAGE_TARGET: package_wheel
      ADDIONAL_CONFIG_OPTIONS: -DENABLE_APPS=OFF -DENABLE_EXAMPLES=OFF -DENABLE_CSHARP=OFF
      PYTHON_PATH_DIR: C:\Miniconda-x64
      PYTHON_VERSION: 2.7
      configuration: Release
    - generator: "Visual Studio 14 2015 Win64"
      BUILD: msvc14_win64_py27
      config_type: win64
      PACKAGE_TARGET: bundle
      ADDIONAL_CONFIG_OPTIONS: -DENABLE_EXAMPLES=OFF -DENABLE_CSHARP=ON -DDISABLE_PACKAGE_SUBDIR=ON
      PYTHON_PATH_DIR: C:\Miniconda-x64
      PYTHON_VERSION: 2.7
      configuration: Release
    - generator: "Visual Studio 14 2015 Win64"
      BUILD: msvc14_win64_py27
      config_type: win64
      PACKAGE_TARGET: package_wheel
      ADDIONAL_CONFIG_OPTIONS: -DENABLE_APPS=OFF -DENABLE_EXAMPLES=OFF -DENABLE_CSHARP=OFF
      PYTHON_PATH_DIR: C:\Miniconda-x64
      PYTHON_VERSION: 2.7
      configuration: Debug
    - generator: "Visual Studio 14 2015 Win64"
      BUILD: msvc14_win64_py36
      config_type: win64
      PACKAGE_TARGET: package_wheel
      ADDIONAL_CONFIG_OPTIONS: -DENABLE_APPS=OFF -DENABLE_EXAMPLES=OFF -DENABLE_CSHARP=OFF
      PYTHON_PATH_DIR: C:\Miniconda36-x64
      PYTHON_VERSION: 3.6
      configuration: Release
    - generator: "Visual Studio 14 2015 Win64"
      BUILD: msvc14_win64_py34
      config_type: win64
      PACKAGE_TARGET: package_wheel
      ADDIONAL_CONFIG_OPTIONS: -DENABLE_APPS=OFF -DENABLE_EXAMPLES=OFF -DENABLE_CSHARP=OFF
      PYTHON_PATH_DIR: C:\Miniconda36-x64
      PYTHON_VERSION: 3.4
      configuration: Release
    - generator: "Visual Studio 14 2015 Win64"
      BUILD: msvc14_win64_py35
      config_type: win64
      PACKAGE_TARGET: package_wheel
      ADDIONAL_CONFIG_OPTIONS: -DENABLE_APPS=OFF -DENABLE_EXAMPLES=OFF -DENABLE_CSHARP=OFF
      PYTHON_PATH_DIR: C:\Miniconda36-x64
      PYTHON_VERSION: 3.5
      configuration: Release
    - generator: "Visual Studio 14 2015 Win64"
      BUILD: msvc14_win64_py35
      config_type: win64
      PACKAGE_TARGET: package_wheel
      ADDIONAL_CONFIG_OPTIONS: -DENABLE_APPS=OFF -DENABLE_EXAMPLES=OFF -DENABLE_CSHARP=OFF
      PYTHON_PATH_DIR: C:\Miniconda36-x64
      PYTHON_VERSION: 3.7
      configuration: Release

matrix:
  fast_finish: true

before_build:
  - cmd: set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - cmd: set PATH=%COMPILER_PATH%;%PATH%
  - cmd: set PATH=%PYTHON_PATH_DIR%;%PYTHON_PATH_DIR%\Scripts;%PATH%
  - cmd: conda update -q -y conda
  - cmd: conda info -a
  - cmd: conda create --name python%PYTHON_VERSION% python=%PYTHON_VERSION% numpy -y -q
  - cmd: activate python%PYTHON_VERSION%
  - cmd: conda install -c conda-forge twine -y -q

install:
  - cmd: date /T & time /T
  - ps: |
      if (Test-Path "C:/ProgramData/chocolatey/bin/swig.exe") {
        C:/ProgramData/chocolatey/bin/swig.exe -swiglib
        if ($lastexitcode -ne 0) {
          echo "Installing swig"
          appveyor-retry choco install swig --version 3.0.8 --yes --limit-output
        }
        else{
            echo "using swig from cache"
        }
      } else {
          echo "Installing swig"
          appveyor-retry choco install swig --version 3.0.8 --yes --limit-output
      }

build_script:
  - call tools\package.bat "%configuration%" "%GENERATOR%" %PACKAGE_TARGET% "%ADDIONAL_CONFIG_OPTIONS%"

before_deploy:
  - ps: if (($env:APPVEYOR_REPO_TAG -imatch "true") -And ($env:configuration -imatch "Release") -And ($env:config_type -imatch "win64") -And (Test-Path .\dist\*.whl)) { & python -m twine upload --skip-existing .\dist\*.whl}

artifacts:
  - path: .\dist\*.zip
    name: Releases
  - path: .\dist\*.whl
    name: PythonRelease
  - path: .\dist\*.nupkg
    name: NuGetRelease

branches:
  only:
  - /v\d\.\d\.\d/
  - master

deploy:
  provider: GitHub
  description: 'Release description'
  artifact: /.*\.nupkg/,/.*\.whl/,/interop-.*\.zip/
  draft: true
  auth_token:
      secure: HcMKUFlziwHVs3kI4ZWKvy9LPKHUoVsaURh9C0yHz7rvMaPD/J7yvlPcTYK7mdrM
  on:
    appveyor_repo_tag: true
    configuration: Release
    config_type: win64

########################################################################################################################
#
# These settings allow one to Remote Desktop into the VM and check what went wrong:
#
########################################################################################################################

#init:
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
