# Build a C# Shared library using SWIG


set(CMAKE_SWIG_OUTDIR ${CMAKE_CURRENT_BINARY_DIR})

add_custom_target(csharp_lib)
set_target_properties(csharp_lib PROPERTIES EXCLUDE_FROM_ALL 1 EXCLUDE_FROM_DEFAULT_BUILD 1)
set(SWIG_VERSION_INFO "")

foreach(SRC ${SWIG_SRCS})
    get_filename_component(MODULE ${SRC} NAME_WE)
    set(MODULE_NAME ${MODULE})
    string(REPLACE "_" ";" MOD_LIST ${MODULE_NAME})
    list(LENGTH MOD_LIST MOD_LIST_LEN)
    if(MOD_LIST_LEN EQUAL 2)
        list(GET MOD_LIST 0 MOD1)
        list(GET MOD_LIST 1 MOD2)
        string(SUBSTRING ${MOD2} 0 1 FIRST_LETTER)
        string(TOUPPER ${FIRST_LETTER} FIRST_LETTER)
        string(REGEX REPLACE "^.(.*)" "${FIRST_LETTER}\\1" MOD2 "${MOD2}")
        set(MODULE_NAME "${MOD1}${MOD2}")
    endif()
    string(SUBSTRING ${MODULE_NAME} 0 1 FIRST_LETTER)
    string(TOUPPER ${FIRST_LETTER} FIRST_LETTER)
    string(REGEX REPLACE "^.(.*)" "${FIRST_LETTER}\\1" NAMESPACE "${MODULE_NAME}")
    set_source_files_properties(${SRC} PROPERTIES SWIG_FLAGS "-namespace;Illumina.InterOp.${NAMESPACE};-module;c_csharp_${MODULE}${SWIG_WORDSIZE_FLAG}")
    set_source_files_properties(${SRC} PROPERTIES CPLUSPLUS ON)
    if(MSVC)
        set(SWIG_VERSION_INFO ${CMAKE_CURRENT_BINARY_DIR}/${MODULE}_version.rc)
        set(LIB_NAME "${MODULE}") # Used to configure the version info file
        configure_file(${CMAKE_SOURCE_DIR}/cmake/version.rc.in ${SWIG_VERSION_INFO} @ONLY) # Requires: LIB_NAME, VERSION_LIST and VERSION
    endif()
    set(SWIG_MODULE_c_csharp_${MODULE}_EXTRA_DEPS ${SWIG_DEPS} ${SWIG_VERSION_INFO})
    add_swig_library(c_csharp_${MODULE} csharp ${SRC} ${SWIG_VERSION_INFO})
    set(SWIG_MODULE ${SWIG_MODULE_c_csharp_${MODULE}_REAL_NAME})
    set(EXTRA_LINKER_FLAGS)
    if(MINGW)
        set(EXTRA_LINKER_FLAGS "-Wl,-add-stdcall-alias")
        get_target_property(existing_link_flags ${SWIG_MODULE} LINK_FLAGS)
        if(existing_link_flags)
            set(EXTRA_LINKER_FLAGS "${existing_link_flags} ${EXTRA_LINKER_FLAGS}")
        endif()
        set_target_properties(${SWIG_MODULE} PROPERTIES LINK_FLAGS "${EXTRA_LINKER_FLAGS}")
    endif()
    if(MSVC)
        set_target_properties(${SWIG_MODULE} PROPERTIES COMPILE_FLAGS "${ENABLE_BIG_OBJ_FLAG} /wd4100 /wd4702")
    elseif(MINGW)
        set_target_properties(${SWIG_MODULE} PROPERTIES COMPILE_FLAGS "${ENABLE_BIG_OBJ_FLAG} ${_WNO_UNUSED_FUNCTION} ${_WNO_UNUSED_PARAMETER}")
    elseif(COMPILER_IS_GNUCC_OR_CLANG)
        set_target_properties(${SWIG_MODULE} PROPERTIES COMPILE_FLAGS "${_WNO_UNUSED_FUNCTION} ${_WNO_UNUSED_PARAMETER}")
    endif()
    if(NOT MSVC)
        set_target_properties(${SWIG_MODULE} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE "${CMAKE_CURRENT_BINARY_DIR}/Release")
        set_target_properties(${SWIG_MODULE} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG "${CMAKE_CURRENT_BINARY_DIR}/Debug")
    endif()
    swig_link_libraries(${SWIG_MODULE} ${INTEROP_DL_LIB})

    if(WIN32)
        set_target_properties(${SWIG_MODULE} PROPERTIES PREFIX "")
    endif()
    add_dependencies(${SWIG_MODULE} ${INTEROP_LIB})

    if(NOT ENABLE_STATIC)
        add_custom_command(TARGET ${SWIG_MODULE} POST_BUILD
                COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE_DIR:${INTEROP_LIB}> ${CMAKE_CURRENT_BINARY_DIR})
    endif()
    list(APPEND SWIG_MODULE_LIST ${SWIG_MODULE})
    add_dependencies(csharp_lib ${SWIG_MODULE})
endforeach()

find_package(CSharp)

if(NOT CSHARP_FOUND)
    message(WARNING "C# compiler not found, unable to generate C# binding library")
    return()
endif()

if(NOT FORCE_SHARED_CRT)
    message(FATAL_ERROR "-DFORCE_SHARED_CRT=OFF is not supported for CSharp bindings. Either set -DENABLE_CSHARP=OFF or -DFORCE_SHARED_CRT=ON")
endif()

include(${CSHARP_USE_FILE})

set(SWIG_GEN_CSHARP_SOURCE_FILES ${CMAKE_SWIG_OUTDIR}/*.cs CACHE INTERNAL "C# source files generated by SWIG" FORCE)

set(ASSEMBLY_INFO ${CMAKE_CURRENT_BINARY_DIR}/AssemblyInfo.cs)
configure_file(${CMAKE_SOURCE_DIR}/cmake/AssemblyInfo.cs.in ${ASSEMBLY_INFO} @ONLY)
set(CSHARP_BINARY_SUFFIX ${CMAKE_SYSTEM_NAME})
csharp_add_library(csharp_interop ${CMAKE_SWIG_OUTDIR}/*.cs)
add_dependencies(csharp_interop ${SWIG_MODULE_LIST})
foreach(SRC ${SWIG_SRCS})
    get_filename_component(MODULE ${SRC} NAME_WE)
    add_custom_command(
            TARGET csharp_interop
            POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E copy_if_different $<TARGET_FILE:${SWIG_MODULE_c_csharp_${MODULE}_REAL_NAME}> $<TARGET_FILE_DIR:${INTEROP_LIB}>
            COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CSHARP_csharp_interop_BINARY} $<TARGET_FILE_DIR:${INTEROP_LIB}>
            COMMENT "copy ${CSHARP_csharp_interop_BINARY} $<TARGET_FILE_DIR:${INTEROP_LIB}>"
    )
endforeach()
set(SWIG_CSHARP_LIBRARY ${CSHARP_csharp_interop_BINARY} CACHE INTERNAL "C# library generated by SWIG" FORCE)

if(ENABLE_EXAMPLES)
    foreach(SRC ${SWIG_SRCS})
        get_filename_component(MODULE ${SRC} NAME_WE)
        install(TARGETS ${SWIG_MODULE_c_csharp_${MODULE}_REAL_NAME} LIBRARY DESTINATION share/illumina/interop/examples)
    endforeach()
    install(FILES ${CSHARP_csharp_interop_BINARY} DESTINATION share/illumina/interop/examples)
endif()

foreach(SRC ${SWIG_SRCS})
    get_filename_component(MODULE ${SRC} NAME_WE)
    install(TARGETS ${SWIG_MODULE_c_csharp_${MODULE}_REAL_NAME} LIBRARY DESTINATION lib64)
endforeach()
install(FILES ${CSHARP_csharp_interop_BINARY}
        DESTINATION lib64
        )
install(DIRECTORY ${CMAKE_SWIG_OUTDIR}
        DESTINATION share/illumina/interop/src
        FILES_MATCHING
        PATTERN "*.cs"
        PATTERN "*.cxx"
        PATTERN "CMakeFiles" EXCLUDE
        PATTERN "${CMAKE_BUILD_TYPE}" EXCLUDE)

add_custom_target(clean_csharp
        COMMENT "Removing SWIG generated C# files in ${CMAKE_CURRENT_BINARY_DIR}"
        COMMAND ${CMAKE_COMMAND} -E remove_directory ${CMAKE_CURRENT_BINARY_DIR})

set_target_properties(clean_csharp PROPERTIES EXCLUDE_FROM_ALL 1 EXCLUDE_FROM_DEFAULT_BUILD 1)

########################################################################################################################
# Create NuGet nuspec package file
########################################################################################################################
if(MSVC)
    set(CONFIG_DIR "$<CONFIG>")
else()
    if(CMAKE_BUILD_TYPE)
        set(CONFIG_DIR "${CMAKE_BUILD_TYPE}")
    else()
        set(CONFIG_DIR "Debug")
   endif()
endif()

set(NUGET_SYS_ID "${CMAKE_SYSTEM_NAME}${PACKAGE_SUFFIX}")
set(DOT_NET_FRAMEWORK "net40")
get_filename_component(DLL_NAME ${CSHARP_csharp_interop_BINARY} NAME)
if(BUILD_NUMBER)
    MATH(EXPR VERSION_PATCHN "${VERSION_PATCH}+1")
    set(INTEROP_VERSION_STR ${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCHN}-alpha${BUILD_NUMBER})
else()
    set(INTEROP_VERSION_STR ${VERSION_SHORT})
endif()
if("${CMAKE_HOST_SYSTEM}" MATCHES ".*Windows.*")
    set(SHARED_LIB_SEARCH_STR "\\*${CMAKE_SHARED_LIBRARY_SUFFIX}")
else()
    set(SHARED_LIB_SEARCH_STR "/*${CMAKE_SHARED_LIBRARY_SUFFIX}")
endif()
# This creates the nuspec file in the proper directory
add_custom_target(nuspec
        COMMENT "Creating package.nuspec"
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
        ${CMAKE_SOURCE_DIR}/cmake/package.targets
        $<TARGET_FILE_DIR:${SWIG_MODULE_c_csharp_${MODULE}_REAL_NAME}>/../illumina_interop_${CSHARP_TYPE}_${NUGET_SYS_ID}.targets
        COMMAND ${CMAKE_COMMAND}
        -DCOMPILER_INFO="${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION}"
        -DCMAKE_CURRENT_BINARY_DIR=${CMAKE_CURRENT_BINARY_DIR}
        -DCSHARP_TYPE=${CSHARP_TYPE}
        -DCSHARP_VERSION=${CSHARP_VERSION}
        -DINTEROP_VERSION=${INTEROP_VERSION_STR}
        -DPLATFORM=${NUGET_SYS_ID}
        -DCSHARP_LIBRARY=${CSHARP_csharp_interop_BINARY_NAME}
        -DCONFIG="${CONFIG_DIR}"
        -DSHARED_LIB_SEARCH="${SHARED_LIB_SEARCH_STR}"
        -DCONFIG_INPUT_FILE=${CMAKE_SOURCE_DIR}/cmake/package.nuspec.in
        -DCONFIG_OUTPUT_FILE=$<TARGET_FILE_DIR:${SWIG_MODULE_c_csharp_${MODULE}_REAL_NAME}>/../package.nuspec
        -P ${CMAKE_SOURCE_DIR}/cmake/ConfigureFile.cmake
        )
add_dependencies(nuspec csharp_interop)
set_target_properties(nuspec PROPERTIES EXCLUDE_FROM_ALL 1 EXCLUDE_FROM_DEFAULT_BUILD 1)

