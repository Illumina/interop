name: Linux

on:
  push:
    branches: [ "master" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # [ubuntu-latest, windows-2016, macOS-latest]
        os: [windows-2016]
        #, '3.11-dev'
        pyver: ['3.9', '3.10']

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: actions/setup-python@v3
        if: matrix.os != 'ubuntu-latest'
        with:
          python-version: ${{matrix.pyver}}

      -name: Check Git
        run: |
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git status
          git tag
          git describe

      - name: Package Python 3.9 and earlier
        if: matrix.os == 'ubuntu-latest' && matrix.pyver == '3.9'
        run: docker run --rm -v ${{github.workspace}}/:/io ezralanglois/interop sh /io/tools/package.sh /io /io/dist travis OFF

      - name: Package Python 3.10
        if: matrix.os == 'ubuntu-latest' && matrix.pyver == '3.10'
        run: docker run --rm -v ${{github.workspace}}/:/io ezralanglois/interop_centos7 sh /io/tools/package.sh /io /io/dist travis OFF Release cp310-cp310

      - name: Package Python 3.11
        if: matrix.os == 'ubuntu-latest' && matrix.pyver == '3.11-dev'
        run: docker run --rm -v ${{github.workspace}}/:/io ezralanglois/interop_centos7 sh /io/tools/package.sh /io /io/dist travis OFF Release cp311-cp311

      - name: Windows Package Python
        if: matrix.os == 'windows-2016'
        shell: cmd
        run: tools\package.bat Release "Visual Studio 15 2017 Win64" package_wheel "-DENABLE_APPS=OFF -DENABLE_EXAMPLES=OFF -DENABLE_CSHARP=OFF -DPython_EXECUTABLE=${{ env.pythonLocation }}\bin\python"

      - name: Mac OSX Package Python
        if: matrix.os == 'macOS-latest'
        run: bash ./tools/package.sh ${{github.workspace}} ${{github.workspace}}/dist travis OFF Release ${{matrix.pyver}}

      - name: List wheels
        if: matrix.os == 'ubuntu-latest'
        run: ls ./dist/*.whl

      - name: Publish a Python distribution to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: ./dist